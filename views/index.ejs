<html>

<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<title>Node Form Example App</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">
	<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"> <!-- load fontawesome -->
	<style>
	[v-cloak] {display: none}
	.bg-appnav { background-color: #F3F3F3; color: #999999; }
	nav { margin-bottom: 20px !important; }
	.card-block {
    -webkit-box-flex: 1;
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    padding: 1.25rem;
		}
	</style>
</head>

<div id="app">
	<nav class="navbar navbar-light bg-appnav navbar-fixed-top justify-content-between">
		<a class="navbar-brand" href="/">
		</a>
		<div class="lead">
			Username: <span class="navbar-text lead mr-3" v-cloak>{{ username }}</span>
		</div>
	</nav>
	<body>
		<div class="container-fluid"><div class="row">


			<div class="col-sm-8 col-lg-9 col-xl-10">
	      <div class="container">
					<div class="jumbotron border border-secondary pt-4 pb-1 height: 100px;">
						<div class="jumbotron jumbotron-fluid bg-light pt-1 pb-1 h-50" style="overflow: auto;">
						  <div class="container">
								<ul class="list-group list-group-flush">
									<li class="list-group-item bg-light"  style="border-color: #e9ecef !important;" v-for="(message, index) in messages" v-bind:key="index" v-cloak>
										<small class="text-muted">{{ message.username }} ({{ moment(message.sentTime, 'X').format('h:mm A') }})</small><br>
		                <span>{{ message.message }}</span>
		              </li>
								</ul>
						  </div>
						</div>
					  <hr class="my-4">


							<form>
							  <div class="row">
							    <div class="col-lg-11 col-md-10 col-sm-9">
								    <input type="text" class="form-control" id="newMessage" placeholder="Enter your message here." v-model="currentMessage">
							    </div>
							    <div class="col-lg-1 col-md-2 col-sm-3">
										<button type="button" class="btn btn-primary mb-2" v-on:click='sendMessage'>Send</button>
							    </div>
							  </div>
							</form>

					</div>
	      </div>
	    </div>

			<div class="col-sm-4 col-lg-3 col-xl-2">
				<div class="card">
			    <div class="card-header" v-cloak>
			      Users Online: {{ usersOnline }}
			    </div>
			    <div class="">
			      <ul class="list-group list-group-flush">
							<li class="list-group-item" v-for="(user, index) in users" v-bind:key="index" v-cloak>
                <i class="fa fa-circle" v-bind:style="{ color: onlineColor }"></i>
                <span v-cloak>{{ user.username }}</span>
              </li>
			      </ul>
			    </div>
			  </div>
	    </div>

		</div></div>
	</body>
</div>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
<script src="https://js.pusher.com/4.1/pusher.min.js"></script> <!-- Pusher JS -->
<script src="https://cdn.jsdelivr.net/npm/lodash@4.17.4/lodash.min.js"></script> <!-- lodash -->
<script src="https://vuejs.org/js/vue.js"></script><!-- Vue Dev Version -->
<!-- <script src="https://vuejs.org/js/vue.min.js"></script> --> <!-- Vue Production Version -->
<script src="https://cdn.jsdelivr.net/npm/vue-resource@1.3.4"></script> <!-- Vue Request Library -->
<script src="https://cdn.jsdelivr.net/npm/moment@2.19.4/moment.min.js"></script> <!-- Moment JS -->
<script>
var currentHostUrl = '<%= currentHostUrl %>';
var authEndpoint = '<%= authEndpoint %>';
var messageEndpoint = '<%= messageEndpoint %>';
var username = '<%= username %>';
const pusherAppKey = '<%= pusherAppKey %>';
const pusherCluster = '<%= pusherCluster %>';
let pusher;
let pusherChannel;

var app = new Vue({
  el: '#app',
  data: {
		username: '',
    users: [],
		usersOnline: 0,
		me: null,
		messages: [],
		onlineColor: '#41B883',
		currentMessage: null,
  },
  created () {
		this.subscribe();
  },
  methods: {
		subscribe () {
			let self = this;
			self.username = username || 'N/A';
			var channel = 'presence-users';

			// Pusher.logToConsole = true; // Enable pusher logging - don't include this in production
			pusher = new Pusher(pusherAppKey, {
			  cluster: pusherCluster,
			  authEndpoint,
			  encrypted: true,
				authTransport: 'ajax',
			  auth: {
			    headers: {
			      user_name: this.username,
						user_id: moment().unix(),
			    }
			  }
			});

			// Presence Channel
			var presenceChannel = pusher.subscribe(channel);
			presenceChannel.bind('pusher:subscription_succeeded', function() {
				self.usersOnline = presenceChannel.members.count;
				const usersOnline = presenceChannel.members.members
				self.users = _.map(usersOnline, user => user);
				self.me = presenceChannel.members.me;
			});

			presenceChannel.bind('pusher:member_added', function() {
				self.usersOnline = presenceChannel.members.count;
				const usersOnline = presenceChannel.members.members
				self.users = _.map(usersOnline, user => user);
			});

			presenceChannel.bind('pusher:member_removed', function() {
				self.usersOnline = presenceChannel.members.count;
				const usersOnline = presenceChannel.members.members
				self.users = _.map(usersOnline, user => user);
			});

			pusher.subscribe('user-messages');
			pusher.bind('new-user-message', data => {
				var allMessages = self.messages;
				allMessages.push(data);
				console.log('new-user-message', data);
      });

    },
		sendMessage: function() {
			var body = {
        username: this.username,
				messageText: this.currentMessage,
				messageTime: moment().unix(),
      };
      this.$http.post(messageEndpoint, body);
			this.currentMessage = null;
			console.log('Message Sent');
		},
  },
});
Vue.prototype.moment = moment;
</script>
</html>
